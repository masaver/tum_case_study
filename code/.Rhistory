install.packages('Bioconductor')
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("ComplexHeatmap")
# set the working directory
wd = '/Users/masaver/Desktop/masaver/job_applications/TUM/bioinf/case_study/code'
setwd( wd )
# Load Libraries
library( ComplexHeatmap )
install.packages('tydiverse')
install.packages('tidyverse')
corr_df
# Load Libraries
library( ComplexHeatmap )
library( tidyverse )
# Read the data
corr_df = read_csv( 'correlation.csv' )
# Read the data
corr_df = read_csv( 'correlation_matrix.csv' )
View(corr_df)
rownames( corr_df ) = corr_df['..1']
rownames( corr_df ) = corr_df['...1']
corr_df['...1']
rownames( corr_df )
rownames( corr_df ) = corr_df[,1]
length( rownames(corr_df))
length( corr_df[,1] )
corr_df[,1]
length( unlist( corr_df[,1] ) )
corr_df = read_csv( 'correlation_matrix.csv' )
rownames( corr_df ) = unlist( corr_df[,1] )
corr_df[,1] = NULL
View(corr_df)
# Read the data
corr_df = read_csv( 'correlation_matrix.csv' )
rownames( corr_df ) = unlist( corr_df[,1] )
corr_df[,1] = NULL
help( "read_csv")
# Read the data
corr_df = read_csv( 'correlation_matrix.csv' , tid)
row_names = unlist( corr_df[,1] )
# Read the data
corr_df = read_csv( 'correlation_matrix.csv' )
row_names = unlist( corr_df[,1] )
corr_df[,1] = NULL
rownames( corr_df ) = row_names
View(corr_df)
#Reaad the metadata
metadata = read_csv( 'metadata.csv' )
View(metadata)
rownames( metadata ) = row_names
View(corr_df)
# Verify the order of rows and columns
all.equal( rownames( metadata ) , rownames( corr_df ) )
all.equal( rownames( metadata ) , colnames( corr_df ) )
#Create the heatmap
hm.plot = Heatmap(
corr_df
)
hm.plot
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F
)
hm.plot
library(circlize)
for( L in list_of_libraries ){
suppressPackageStartupMessages( library( L ) )
}
# Load Libraries
list_of_libraries = c('ComplexHeatmap','circlize','tidyverse')
for( L in list_of_libraries ){
suppressPackageStartupMessages( library( L ) )
}
for( L in list_of_libraries ){
print(L)
# suppressPackageStartupMessages( library( L ) )
}
#Heatmap color scales and annotations
col_fun = colorRamp2(c(0, 0.5, 1), c("blue", "white", "red"))
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F ,
col = col_fun
)
hm.plot
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F ,
col = col_fun ,
row_split = metadata$tumor_stage_pathological ,
column_split = metadata$tumor_stage_pathological
)
hm.plot
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F ,
col = col_fun ,
row_split = 3 ,
column_split = 3
)
hm.plot
help(HeatmapAnnotation)
View(metadata)
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F ,
col = col_fun ,
row_split = 3 ,
column_split = 3,
top_annotation = hm_anno
)
hm_anno = HeatmapAnnotation( df = metadata[,c('tumor_stage_pathological','histologic_type')] )
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F ,
col = col_fun ,
row_split = 3 ,
column_split = 3,
top_annotation = hm_anno
)
hm.plot
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F ,
col = col_fun ,
row_split = 4 ,
column_split = 4,
top_annotation = hm_anno
)
hm.plot
fviz_nbclust(corr_df, kmeans, method = "wss")
# find the optimal number of clusters
library(cluster)
library(factoextra)
install.packages('factoextra')
library(factoextra)
fviz_nbclust(corr_df, kmeans, method = "wss")
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F ,
col = col_fun ,
row_split = 6 ,
column_split = 6,
top_annotation = hm_anno
)
hm.plot
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F ,
col = col_fun ,
row_split = 2 ,
column_split = 2,
top_annotation = hm_anno
)
hm.plot
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F ,
col = col_fun ,
row_split = 3 ,
column_split = 3 ,
top_annotation = hm_anno
)
hm.plot
healp(Heatmap)
help(Heatmap)
fviz_nbclust(corr_df, hclust, method = "wss")
fviz_nbclust( corr_df , hcut, method = "wss")
png('elbow_method_analysis.png')
fviz_nbclust( corr_df , hcut, method = "wss")
dev.off()
#Create the heatmap
hm.plot = Heatmap(
corr_df ,
show_row_names = F ,
show_column_names = F ,
col = col_fun ,
row_split = 3 ,
column_split = 3 ,
top_annotation = hm_anno
)
png('3clusters_heatmap.png')
plot( hm.plot )
dev.off()
# Load Libraries
suppresWarnings( library( ComplexHeatmap ) )
# Load Libraries
suppressWarnings( library( ComplexHeatmap ) )
hm_anno = HeatmapAnnotation( df = metadata[,c('tumor_stage_pathological','histologic_type','age_cat')] )
# set the working directory
wd = '/Users/masaver/Desktop/masaver/job_applications/TUM/bioinf/case_study/code'
setwd( wd )
# Load Libraries
suppressWarnings( library( ComplexHeatmap ) )
suppressPackageStartupMessages(library(ComplexHeatmap))
suppressWarnings( library(circlize) )
suppressPackageStartupMessages(library(circlize))
suppressWarnings( library( tidyverse ) )
suppressWarnings( library( cluster ) )
suppressWarnings( library( factoextra ) )
# Read the data
corr_df = read_csv( 'correlation_matrix.csv' )
row_names = unlist( corr_df[,1] )
corr_df[,1] = NULL
rownames( corr_df ) = row_names
#Reaad the metadata
metadata = read_csv( 'metadata.csv' )
